@model IEnumerable<Models.Review>

@{
    ViewData["Title"] = "All Reviews";
    var artistProfileId = Model.FirstOrDefault()?.ArtistProfileId ?? ViewBag.ArtistProfileId;
    var currentUserArtistProfileId = User.FindFirst("ArtistProfile")?.Value;
    var isOwner = currentUserArtistProfileId != null && artistProfileId.ToString() == currentUserArtistProfileId;
}

<style>
    .reviews-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
        background: #1e1e1e;
        border-radius: 16px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        color: white;
    }

    .reviews-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid rgba(248, 164, 216, 0.1);
    }

    .reviews-title {
        font-size: 2rem;
        font-weight: 600;
        color: white;
        margin: 0;
    }

    .btn-add-review {
        background: #f8a4d8;
        color: white;
        padding: 0.8rem 1.5rem;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
    }

        .btn-add-review:hover {
            background: #f591d1;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(248, 164, 216, 0.3);
        }

    .reviews-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 1rem;
    }

    .review-card {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        padding: 1.5rem;
        transition: transform 0.3s ease;
    }

        .review-card:hover {
            transform: translateY(-5px);
        }

    .review-rating {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
    }

    .rating-stars {
        color: #f8a4d8;
        font-size: 1.2rem;
        margin-right: 0.5rem;
    }

    .review-date {
        color: rgba(255, 255, 255, 0.6);
        font-size: 0.9rem;
        margin-left: auto;
    }

    .review-comment {
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 1.5rem;
        line-height: 1.6;
    }

    .review-actions {
        display: flex;
        gap: 0.5rem;
        margin-top: auto;
    }

    .btn-action {
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 6px;
        font-size: 0.9rem;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .btn-details {
        background: rgba(255, 255, 255, 0.1);
        color: white;
    }

    .btn-edit {
        background: rgba(248, 164, 216, 0.2);
        color: #f8a4d8;
    }

    .btn-delete {
        background: rgba(255, 59, 48, 0.2);
        color: #ff3b30;
    }

    .btn-action:hover {
        transform: translateY(-2px);
        filter: brightness(1.2);
    }

    .review-meta {
        font-size: 0.9rem;
        color: rgba(255, 255, 255, 0.6);
        margin-bottom: 1rem;
    }

        .review-meta span {
            margin-right: 1rem;
        }

    @@media (max-width: 768px) {
        .reviews-container

    {
        margin: 1rem;
        padding: 1rem;
    }

    .reviews-header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }

    .reviews-grid {
        grid-template-columns: 1fr;
    }

    }
</style>

<div class="reviews-container">
    <div class="reviews-header">
        <h1 class="reviews-title">Reviews</h1>
        @if(!isOwner){
        <form asp-controller="Review" asp-action="Create" method="get" style="display: inline;">
            <input type="hidden" name="id" value="@artistProfileId" />
            <button type="submit" class="btn-add-review">
                Add New Review
            </button>
        </form>
        }
    </div>

    <div class="reviews-grid">
        @foreach (var review in Model)
        {
            <div class="review-card">
                <div class="review-rating">
                    <div class="rating-stars">
                        @for (int i = 0; i < review.Rating; i++)
                        {
                            <span>★</span>
                        }
                        @for (int i = review.Rating; i < 5; i++)
                        {
                            <span style="color: rgba(248, 164, 216, 0.3)">★</span>
                        }
                    </div>
                    <span class="review-date">@review.CreatedAt.ToShortDateString()</span>
                </div>
                <p class="review-comment">@review.Comment</p>

                <div class="review-actions">
                    <a asp-action="Details" asp-route-id="@review.ReviewId" class="btn-action btn-details">Details</a>
                    @if(isOwner){
                       <a asp-action="Delete" asp-route-id="@review.ReviewId" class="btn-action btn-delete">Delete</a>
                    }
                </div>
            </div>
        }
    </div>
</div>